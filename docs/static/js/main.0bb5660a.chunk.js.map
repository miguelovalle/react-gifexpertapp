{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","hooks/useFetchGifs.js","components/GifGridItem.js","components/Gifgrid.js","GifExpertApp.js","index.js"],"names":["AddCategory","category","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","useFetchGifs","loading","state","setstate","useEffect","then","imgs","GifGridItem","className","src","alt","Gifgrid","GifExpertApp","categories","setCategories","ReactDOM","render","document","getElementById"],"mappings":"mMA4BeA,EAzBK,SAAC,GAAiB,IAAfC,EAAc,EAAdA,SAAc,EAECC,mBAAS,IAFV,mBAE5BC,EAF4B,KAEhBC,EAFgB,KAcnC,OACE,sBAAMC,SATa,SAACC,GACpBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAS,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OAChCN,EAAc,MAKjB,SACE,uBACEO,KAAK,OACLC,MAAOT,EACPU,SAfoB,SAACP,GAAD,OAAOF,EAAcE,EAAEQ,OAAOF,a,+BCL7CG,EAAO,uCAAG,WAAMd,GAAN,uBAAAe,EAAA,6DAEbC,EAFa,iDAEkCC,UAAUjB,GAF5C,+DAIAkB,MAAMF,GAJN,cAIbG,EAJa,gBAKEA,EAAKC,OALP,uBAKZC,EALY,EAKZA,KAEDC,EAAMD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACPC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXnB,kBAcZM,GAdY,4CAAH,sDCuBLO,EAtBM,SAAE7B,GAAe,IAAD,EAEPC,mBAAS,CAC/BoB,KAAM,GACNS,SAAS,IAJoB,mBAE1BC,EAF0B,KAEnBC,EAFmB,KAkBjC,OAXAC,qBAAU,WACNnB,EAAUd,GACLkC,MAAO,SAACC,GAAD,OACJH,EAAW,CACPX,KAAMc,EACNL,SAAS,SAGvB,CAAC9B,IAGI+B,GCPIK,EAZK,SAAC,GAAoB,EAAnBX,GAAoB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAC9B,OACE,mCAEE,sBAAKqB,UAAY,OAAjB,UACI,qBAAKC,IAAKtB,EAAKuB,IAAKvB,IACpB,4BAAIU,UCuBEc,EAzBA,SAAC,GAAgB,IAAfxC,EAAc,EAAdA,SAAc,EAGC6B,EAAc7B,GAAjC2B,EAHkB,EAGvBN,KAAaS,EAHU,EAGVA,QAEpB,OACE,qCACE,+BAAK9B,EAAL,OACE8B,GAAW,2CACZ,qBAAKO,UAAU,YAAf,SAEC,8BAEIV,EAAOJ,KAAK,SAACC,GAAD,OACV,cAAC,EAAD,eAEMA,GADCA,EAAIC,eCYTgB,EA5BK,WAAO,IAAD,EAEaxC,mBAAS,CAAC,cAFvB,mBAEhByC,EAFgB,KAEJC,EAFI,KAQvB,OACI,qCACI,gDACD,cAAC,EAAD,CAAa3C,SAAW2C,IACvB,uBACA,6BAEQD,EAAWnB,KAAK,SAAAvB,GAAQ,OAEpB,aADxB,CACyB,EAAD,CAEIA,SAAWA,GADNA,Y,MCjBjC4C,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.0bb5660a.chunk.js","sourcesContent":["\r\nimport React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\nconst AddCategory = ( {category}) => {\r\n\r\n  const [inputValue, setinputValue] = useState('');  \r\n  \r\n  const handleInputChange = (e) => setinputValue(e.target.value);\r\n  \r\n  const handleSubmit = (e) => { \r\n    e.preventDefault();\r\n    if (inputValue.trim().length > 2 ) {\r\n       category(cats => [inputValue,...cats]);\r\n       setinputValue('');\r\n    };\r\n  }\r\n \r\n  return ( \r\n    <form onSubmit={handleSubmit} >\r\n      <input\r\n        type='text' \r\n        value={inputValue}   \r\n        onChange={ handleInputChange}\r\n      /> \r\n    </form> \r\n  ) \r\n}\r\n\r\nexport default AddCategory\r\n\r\nAddCategory.propTypes = {\r\n  category: PropTypes.func.isRequired\r\n}\r\n\r\n","\r\n\r\nexport const getGifs = async(category) => {\r\n\r\n    const url =`https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=BbTvTkh8oNeD6Ue2oMLkTCFZWa5xMXKq`;\r\n\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs= data.map( img => {\r\n        return {\r\n        id: img.id,\r\n        title: img.title,\r\n        url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n    return gifs;\r\n}","import { useEffect, useState } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nconst useFetchGifs = ( category ) => {\r\n\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs ( category )\r\n            .then ( (imgs) => \r\n                setstate ( {\r\n                    data: imgs,\r\n                    loading: false\r\n                })\r\n            )\r\n    },[category]);\r\n\r\n\r\n    return state; // {data[], loading}\r\n\r\n}\r\n\r\nexport default useFetchGifs; \r\n  ","import React from 'react'\r\n\r\nconst GifGridItem = ({id,title, url}) => {\r\n  return (\r\n    <>\r\n\r\n      <div className = \"card\" >\r\n          <img src={url} alt={url} />\r\n          <p>{title}</p>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default GifGridItem\r\n  ","\r\nimport React from 'react'\r\nimport useFetchGifs from '../hooks/useFetchGifs'\r\nimport GifGridItem from './GifGridItem';\r\n\r\n\r\nconst Gifgrid = ({category}) => {\r\n\r\n \r\n  const {data:images, loading} = useFetchGifs( category );\r\n\r\n  return (\r\n    <>\r\n      <h3>{category} </h3>  \r\n      { loading && <p>loading...</p>   }\r\n       <div className=\"card-grid\">\r\n      \r\n        <div>\r\n          {\r\n            images.map( (img) => (\r\n              <GifGridItem \r\n                key={img.id}  \r\n                {...img}\r\n              />  \r\n            ))\r\n          }\r\n        </div>\r\n      </div> \r\n    </>\r\n  )\r\n} \r\nexport  default Gifgrid\r\n","\r\nimport React, { useState } from 'react'\r\nimport AddCategory from './components/AddCategory';\r\nimport Gifgrid from './components/Gifgrid'\r\n\r\nconst GifExpertApp = () => {\r\n    \r\n    const [categories, setCategories] = useState(['One Punch']);\r\n        \r\n   // const handleAdd= () => {\r\n  //       setCategories([...categories, 'HunterX']);\r\n  //      };\r\n   \r\n    return ( \r\n        <>  \r\n            <h1>Gif Expert App</h1>\r\n           <AddCategory category= {setCategories} /> \r\n            <hr/>\r\n            <ol>  \r\n                {\r\n                    categories.map( category => \r\n//                       (<li key = {category}> {category}  </li>)\r\n                        <Gifgrid \r\n                            key={category} \r\n                            category= {category} \r\n                        />    \r\n                    )\r\n                }\r\n            </ol>\r\n        </>\r\n    );  \r\n};\r\n \r\nexport default  GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n\n    <GifExpertApp />,\n\n  document.getElementById('root')\n);\n\n\n\n"],"sourceRoot":""}